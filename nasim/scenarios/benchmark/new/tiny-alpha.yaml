# A tiny standard (one public network) network configuration
# 3 hosts
# 3 subnets
# 2 service
# 1 process
# 1 os
# 2 exploit
# 1 privilege escalation

# Optimal path:
# (e_ssh, (1, 0)) -> subnet_scan -> (e_ssh, (3, 0)) -> (pe_tomcat, (2, 0))

subnets: [1, 1, 1]

topology: [[ 1, 1, 1, 0],
           [ 1, 1, 1, 1],
           [ 0, 0, 1, 1],
           [ 0, 1, 1, 1]]

sensitive_hosts:
  (2, 0): 100
  (3, 0): 100

os:
  - linux
services:
  - ssh
  - ftp
processes:
  - tomcat
exploits:
  e_ssh:
    service: ssh
    os: linux
    prob: 0.9
    cost: 1
    access: user
  e_ftp:
    service: ftp
    os: linux
    prob: 0.6
    cost: 1
    access: root
privilege_escalation:
  pe_tomcat:
    process: tomcat
    os: linux
    prob: 1.0
    cost: 1
    access: root

service_scan_cost: 1
os_scan_cost: 1
subnet_scan_cost: 1
process_scan_cost: 1
host_configurations:
  (1, 0):
    os: linux
    services: [ssh]
    processes: [tomcat]
    # which services to deny between individual hosts
  (2, 0):
    os: linux
    services: [ssh, ftp]
    processes: [tomcat]
  (3, 0):
    os: linux
    services: [ftp]
    processes: [tomcat]

# two row for each connection between subnets as defined by topology
# one for each direction of connection
# list which services to allow

firewall:
  (0, 1): [ssh]
  (1, 0): [ssh]
  (0, 2): [ftp, ssh]
  (2, 0): []
  (1, 2): [ssh]
  (2, 1): []
  (1, 3): [ftp]
  (3, 1): [ssh]
  (2, 3): [ftp, ssh]
  (3, 2): [ftp, ssh]

step_limit: 1000